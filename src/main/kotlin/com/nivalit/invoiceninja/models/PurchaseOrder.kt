/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.nivalit.invoiceninja.models

import com.nivalit.invoiceninja.models.CompanySettings
import com.nivalit.invoiceninja.models.InvoiceItem

import com.squareup.moshi.Json

/**
 * 
 *
 * @param id The unique hashed identifier for the purchase order
 * @param userId The unique hashed identifier for the user who created the purchase order
 * @param assignedUserId The unique hashed identifier for the user assigned to the purchase order
 * @param companyId The unique hashed identifier for the company associated with the purchase order
 * @param vendorId The unique hashed identifier for the vendor associated with the purchase order
 * @param statusId The status of the purchase order represented by a unique identifier
 * @param number The unique alpha-numeric purchase order number per company
 * @param quoteNumber The quote number associated with this purchase order
 * @param terms The terms and conditions for the purchase order
 * @param publicNotes Publicly visible notes associated with the purchase order
 * @param privateNotes Privately visible notes associated with the purchase order, not disclosed to the vendor
 * @param footer The footer text of the purchase order
 * @param customValue1 First custom value field for additional information
 * @param customValue2 Second custom value field for additional information
 * @param customValue3 Third custom value field for additional information
 * @param customValue4 Fourth custom value field for additional information
 * @param taxName1 The name of the first tax applied to the purchase order
 * @param taxName2 The name of the second tax applied to the purchase order
 * @param taxRate1 The rate of the first tax applied to the purchase order
 * @param taxRate2 The rate of the second tax applied to the purchase order
 * @param taxName3 The name of the third tax applied to the purchase order
 * @param taxRate3 The rate of the third tax applied to the purchase order
 * @param totalTaxes The total amount of taxes applied to the purchase order
 * @param lineItems An array of objects which define the line items of the purchase order
 * @param amount The total amount of the purchase order before taxes and discounts
 * @param balance The balance due for the purchase order after accounting for payments
 * @param paidToDate The total amount paid on the purchase order so far
 * @param discount The discount amount or percentage applied to the purchase order
 * @param partial The partial or deposit amount for the purchase order
 * @param isAmountDiscount Boolean flag indicating if the discount is a fixed amount or a percentage
 * @param isDeleted Boolean flag indicating if the purchase order has been deleted
 * @param usesInclusiveTaxes Boolean flag indicating if the taxes used are inclusive or exclusive
 * @param date The date the purchase order was created
 * @param lastSentDate The last date the purchase order was sent to the vendor
 * @param nextSendDate The next scheduled date for sending a reminder for the purchase order
 * @param partialDueDate The due date for the partial or deposit amount
 * @param dueDate The due date for the total amount of the purchase order
 * @param settings 
 * @param lastViewed Timestamp
 * @param updatedAt Timestamp
 * @param archivedAt Timestamp
 * @param customSurcharge1 First custom surcharge amount for the purchase order
 * @param customSurcharge2 Second custom surcharge amount for the purchase order
 * @param customSurcharge3 Third custom surcharge amount for the purchase order
 * @param customSurcharge4 Fourth custom surcharge amount for the purchase order
 * @param customSurchargeTax1 Boolean flag indicating if taxes are charged on the first custom surcharge amount
 * @param customSurchargeTax2 Boolean flag indicating if taxes are charged on the second custom surcharge amount
 * @param customSurchargeTax3 Boolean flag indicating if taxes are charged on the third custom surcharge amount
 * @param customSurchargeTax4 Boolean flag indicating if taxes are charged on the fourth custom surcharge amount
 */


data class PurchaseOrder (

    /* The unique hashed identifier for the purchase order */
    @Json(name = "id")
    val id: kotlin.String? = null,

    /* The unique hashed identifier for the user who created the purchase order */
    @Json(name = "user_id")
    val userId: kotlin.String? = null,

    /* The unique hashed identifier for the user assigned to the purchase order */
    @Json(name = "assigned_user_id")
    val assignedUserId: kotlin.String? = null,

    /* The unique hashed identifier for the company associated with the purchase order */
    @Json(name = "company_id")
    val companyId: kotlin.String? = null,

    /* The unique hashed identifier for the vendor associated with the purchase order */
    @Json(name = "vendor_id")
    val vendorId: kotlin.String? = null,

    /* The status of the purchase order represented by a unique identifier */
    @Json(name = "status_id")
    val statusId: kotlin.String? = null,

    /* The unique alpha-numeric purchase order number per company */
    @Json(name = "number")
    val number: kotlin.String? = null,

    /* The quote number associated with this purchase order */
    @Json(name = "quote_number")
    val quoteNumber: kotlin.String? = null,

    /* The terms and conditions for the purchase order */
    @Json(name = "terms")
    val terms: kotlin.String? = null,

    /* Publicly visible notes associated with the purchase order */
    @Json(name = "public_notes")
    val publicNotes: kotlin.String? = null,

    /* Privately visible notes associated with the purchase order, not disclosed to the vendor */
    @Json(name = "private_notes")
    val privateNotes: kotlin.String? = null,

    /* The footer text of the purchase order */
    @Json(name = "footer")
    val footer: kotlin.String? = null,

    /* First custom value field for additional information */
    @Json(name = "custom_value1")
    val customValue1: kotlin.String? = null,

    /* Second custom value field for additional information */
    @Json(name = "custom_value2")
    val customValue2: kotlin.String? = null,

    /* Third custom value field for additional information */
    @Json(name = "custom_value3")
    val customValue3: kotlin.String? = null,

    /* Fourth custom value field for additional information */
    @Json(name = "custom_value4")
    val customValue4: kotlin.String? = null,

    /* The name of the first tax applied to the purchase order */
    @Json(name = "tax_name1")
    val taxName1: kotlin.String? = null,

    /* The name of the second tax applied to the purchase order */
    @Json(name = "tax_name2")
    val taxName2: kotlin.String? = null,

    /* The rate of the first tax applied to the purchase order */
    @Json(name = "tax_rate1")
    val taxRate1: kotlin.Float? = null,

    /* The rate of the second tax applied to the purchase order */
    @Json(name = "tax_rate2")
    val taxRate2: kotlin.Float? = null,

    /* The name of the third tax applied to the purchase order */
    @Json(name = "tax_name3")
    val taxName3: kotlin.String? = null,

    /* The rate of the third tax applied to the purchase order */
    @Json(name = "tax_rate3")
    val taxRate3: kotlin.Float? = null,

    /* The total amount of taxes applied to the purchase order */
    @Json(name = "total_taxes")
    val totalTaxes: kotlin.Float? = null,

    /* An array of objects which define the line items of the purchase order */
    @Json(name = "line_items")
    val lineItems: kotlin.collections.List<InvoiceItem>? = null,

    /* The total amount of the purchase order before taxes and discounts */
    @Json(name = "amount")
    val amount: kotlin.Float? = null,

    /* The balance due for the purchase order after accounting for payments */
    @Json(name = "balance")
    val balance: kotlin.Float? = null,

    /* The total amount paid on the purchase order so far */
    @Json(name = "paid_to_date")
    val paidToDate: kotlin.Float? = null,

    /* The discount amount or percentage applied to the purchase order */
    @Json(name = "discount")
    val discount: kotlin.Float? = null,

    /* The partial or deposit amount for the purchase order */
    @Json(name = "partial")
    val partial: kotlin.Float? = null,

    /* Boolean flag indicating if the discount is a fixed amount or a percentage */
    @Json(name = "is_amount_discount")
    val isAmountDiscount: kotlin.Boolean? = null,

    /* Boolean flag indicating if the purchase order has been deleted */
    @Json(name = "is_deleted")
    val isDeleted: kotlin.Boolean? = null,

    /* Boolean flag indicating if the taxes used are inclusive or exclusive */
    @Json(name = "uses_inclusive_taxes")
    val usesInclusiveTaxes: kotlin.Boolean? = null,

    /* The date the purchase order was created */
    @Json(name = "date")
    val date: java.time.LocalDate? = null,

    /* The last date the purchase order was sent to the vendor */
    @Json(name = "last_sent_date")
    val lastSentDate: java.time.LocalDate? = null,

    /* The next scheduled date for sending a reminder for the purchase order */
    @Json(name = "next_send_date")
    val nextSendDate: java.time.LocalDate? = null,

    /* The due date for the partial or deposit amount */
    @Json(name = "partial_due_date")
    val partialDueDate: java.time.LocalDate? = null,

    /* The due date for the total amount of the purchase order */
    @Json(name = "due_date")
    val dueDate: java.time.LocalDate? = null,

    @Json(name = "settings")
    val settings: CompanySettings? = null,

    /* Timestamp */
    @Json(name = "last_viewed")
    val lastViewed: java.math.BigDecimal? = null,

    /* Timestamp */
    @Json(name = "updated_at")
    val updatedAt: java.math.BigDecimal? = null,

    /* Timestamp */
    @Json(name = "archived_at")
    val archivedAt: java.math.BigDecimal? = null,

    /* First custom surcharge amount for the purchase order */
    @Json(name = "custom_surcharge1")
    val customSurcharge1: kotlin.Float? = null,

    /* Second custom surcharge amount for the purchase order */
    @Json(name = "custom_surcharge2")
    val customSurcharge2: kotlin.Float? = null,

    /* Third custom surcharge amount for the purchase order */
    @Json(name = "custom_surcharge3")
    val customSurcharge3: kotlin.Float? = null,

    /* Fourth custom surcharge amount for the purchase order */
    @Json(name = "custom_surcharge4")
    val customSurcharge4: kotlin.Float? = null,

    /* Boolean flag indicating if taxes are charged on the first custom surcharge amount */
    @Json(name = "custom_surcharge_tax1")
    val customSurchargeTax1: kotlin.Boolean? = null,

    /* Boolean flag indicating if taxes are charged on the second custom surcharge amount */
    @Json(name = "custom_surcharge_tax2")
    val customSurchargeTax2: kotlin.Boolean? = null,

    /* Boolean flag indicating if taxes are charged on the third custom surcharge amount */
    @Json(name = "custom_surcharge_tax3")
    val customSurchargeTax3: kotlin.Boolean? = null,

    /* Boolean flag indicating if taxes are charged on the fourth custom surcharge amount */
    @Json(name = "custom_surcharge_tax4")
    val customSurchargeTax4: kotlin.Boolean? = null

)

