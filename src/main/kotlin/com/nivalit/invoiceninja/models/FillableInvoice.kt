/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.nivalit.invoiceninja.models

import com.nivalit.invoiceninja.models.InvoiceItem

import com.fasterxml.jackson.annotation.JsonProperty

/**
 * 
 *
 * @param assignedUserId The assigned user's hashed ID
 * @param clientId The client's hashed ID
 * @param number The unique alphanumeric invoice number for each invoice per company
 * @param poNumber The purchase order number associated with the invoice
 * @param terms The terms and conditions for the invoice
 * @param publicNotes Public notes visible to the client on the invoice
 * @param privateNotes Private notes for internal use only
 * @param footer The footer text displayed on the invoice
 * @param customValue1 First custom value for additional information
 * @param customValue2 Second custom value for additional information
 * @param customValue3 Third custom value for additional information
 * @param customValue4 Fourth custom value for additional information
 * @param taxName1 Name of the first tax applied to the invoice
 * @param taxName2 Name of the second tax applied to the invoice
 * @param taxRate1 Rate of the first tax applied to the invoice
 * @param taxRate2 Rate of the second tax applied to the invoice
 * @param taxName3 Name of the third tax applied to the invoice
 * @param taxRate3 Rate of the third tax applied to the invoice
 * @param lineItems An array of objects which define the line items of the invoice
 * @param discount The discount applied to the invoice
 * @param partial The partial amount applied to the invoice
 * @param isAmountDiscount Indicates whether the discount applied is a fixed amount or a percentage
 * @param usesInclusiveTaxes Indicates whether the tax rates applied to the invoice are inclusive or exclusive
 * @param date The date the invoice was issued
 * @param partialDueDate The due date for the partial payment
 * @param dueDate The due date for the invoice
 * @param customSurcharge1 First custom surcharge applied to the invoice
 * @param customSurcharge2 Second custom surcharge applied to the invoice
 * @param customSurcharge3 Third custom surcharge applied to the invoice
 * @param customSurcharge4 Fourth custom surcharge applied to the invoice
 */


data class FillableInvoice (

    /* The assigned user's hashed ID */
    @field:JsonProperty("assigned_user_id")
    val assignedUserId: kotlin.String? = null,

    /* The client's hashed ID */
    @field:JsonProperty("client_id")
    val clientId: kotlin.String? = null,

    /* The unique alphanumeric invoice number for each invoice per company */
    @field:JsonProperty("number")
    val number: kotlin.String? = null,

    /* The purchase order number associated with the invoice */
    @field:JsonProperty("po_number")
    val poNumber: kotlin.String? = null,

    /* The terms and conditions for the invoice */
    @field:JsonProperty("terms")
    val terms: kotlin.String? = null,

    /* Public notes visible to the client on the invoice */
    @field:JsonProperty("public_notes")
    val publicNotes: kotlin.String? = null,

    /* Private notes for internal use only */
    @field:JsonProperty("private_notes")
    val privateNotes: kotlin.String? = null,

    /* The footer text displayed on the invoice */
    @field:JsonProperty("footer")
    val footer: kotlin.String? = null,

    /* First custom value for additional information */
    @field:JsonProperty("custom_value1")
    val customValue1: kotlin.String? = null,

    /* Second custom value for additional information */
    @field:JsonProperty("custom_value2")
    val customValue2: kotlin.String? = null,

    /* Third custom value for additional information */
    @field:JsonProperty("custom_value3")
    val customValue3: kotlin.String? = null,

    /* Fourth custom value for additional information */
    @field:JsonProperty("custom_value4")
    val customValue4: kotlin.String? = null,

    /* Name of the first tax applied to the invoice */
    @field:JsonProperty("tax_name1")
    val taxName1: kotlin.String? = null,

    /* Name of the second tax applied to the invoice */
    @field:JsonProperty("tax_name2")
    val taxName2: kotlin.String? = null,

    /* Rate of the first tax applied to the invoice */
    @field:JsonProperty("tax_rate1")
    val taxRate1: java.math.BigDecimal? = null,

    /* Rate of the second tax applied to the invoice */
    @field:JsonProperty("tax_rate2")
    val taxRate2: java.math.BigDecimal? = null,

    /* Name of the third tax applied to the invoice */
    @field:JsonProperty("tax_name3")
    val taxName3: kotlin.String? = null,

    /* Rate of the third tax applied to the invoice */
    @field:JsonProperty("tax_rate3")
    val taxRate3: java.math.BigDecimal? = null,

    /* An array of objects which define the line items of the invoice */
    @field:JsonProperty("line_items")
    val lineItems: kotlin.collections.List<InvoiceItem>? = null,

    /* The discount applied to the invoice */
    @field:JsonProperty("discount")
    val discount: java.math.BigDecimal? = null,

    /* The partial amount applied to the invoice */
    @field:JsonProperty("partial")
    val partial: java.math.BigDecimal? = null,

    /* Indicates whether the discount applied is a fixed amount or a percentage */
    @field:JsonProperty("is_amount_discount")
    val isAmountDiscount: kotlin.Boolean? = null,

    /* Indicates whether the tax rates applied to the invoice are inclusive or exclusive */
    @field:JsonProperty("uses_inclusive_taxes")
    val usesInclusiveTaxes: kotlin.Boolean? = null,

    /* The date the invoice was issued */
    @field:JsonProperty("date")
    val date: kotlin.String? = null,

    /* The due date for the partial payment */
    @field:JsonProperty("partial_due_date")
    val partialDueDate: kotlin.String? = null,

    /* The due date for the invoice */
    @field:JsonProperty("due_date")
    val dueDate: kotlin.String? = null,

    /* First custom surcharge applied to the invoice */
    @field:JsonProperty("custom_surcharge1")
    val customSurcharge1: java.math.BigDecimal? = null,

    /* Second custom surcharge applied to the invoice */
    @field:JsonProperty("custom_surcharge2")
    val customSurcharge2: java.math.BigDecimal? = null,

    /* Third custom surcharge applied to the invoice */
    @field:JsonProperty("custom_surcharge3")
    val customSurcharge3: java.math.BigDecimal? = null,

    /* Fourth custom surcharge applied to the invoice */
    @field:JsonProperty("custom_surcharge4")
    val customSurcharge4: java.math.BigDecimal? = null

)

