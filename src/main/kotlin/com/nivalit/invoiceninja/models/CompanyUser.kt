/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.nivalit.invoiceninja.models

import com.nivalit.invoiceninja.models.Account
import com.nivalit.invoiceninja.models.Company
import com.nivalit.invoiceninja.models.CompanyToken
import com.nivalit.invoiceninja.models.User

import com.squareup.moshi.Json

/**
 * 
 *
 * @param permissions The company user permissions
 * @param settings Settings that are used for the frontend applications to store user preferences / metadata
 * @param reactSettings Dedicated settings object for the react web application
 * @param isOwner Determines whether the user owns this company
 * @param isAdmin Determines whether the user is the admin of this company
 * @param isLocked Determines whether the users access to this company has been locked
 * @param updatedAt The last time the record was modified, format Unix Timestamp
 * @param deletedAt Timestamp when the user was archived, format Unix Timestamp
 * @param account 
 * @param company 
 * @param user 
 * @param token 
 */


data class CompanyUser (

    /* The company user permissions */
    @Json(name = "permissions")
    val permissions: kotlin.String? = null,

    /* Settings that are used for the frontend applications to store user preferences / metadata */
    @Json(name = "settings")
    val settings: kotlin.Any? = null,

    /* Dedicated settings object for the react web application */
    @Json(name = "react_settings")
    val reactSettings: kotlin.Any? = null,

    /* Determines whether the user owns this company */
    @Json(name = "is_owner")
    val isOwner: kotlin.Boolean? = null,

    /* Determines whether the user is the admin of this company */
    @Json(name = "is_admin")
    val isAdmin: kotlin.Boolean? = null,

    /* Determines whether the users access to this company has been locked */
    @Json(name = "is_locked")
    val isLocked: kotlin.Boolean? = null,

    /* The last time the record was modified, format Unix Timestamp */
    @Json(name = "updated_at")
    val updatedAt: kotlin.Int? = null,

    /* Timestamp when the user was archived, format Unix Timestamp */
    @Json(name = "deleted_at")
    val deletedAt: kotlin.Int? = null,

    @Json(name = "account")
    val account: Account? = null,

    @Json(name = "company")
    val company: Company? = null,

    @Json(name = "user")
    val user: User? = null,

    @Json(name = "token")
    val token: CompanyToken? = null

)

