/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.nivalit.invoiceninja.models


import com.fasterxml.jackson.annotation.JsonProperty

/**
 * 
 *
 * @param id Unique identifier for the subscription
 * @param userId Unique identifier for the user associated with the subscription
 * @param productId Unique identifier for the product associated with the subscription
 * @param companyId Unique identifier for the company associated with the subscription
 * @param recurringInvoiceId Unique identifier for the recurring invoice associated with the subscription
 * @param isRecurring Indicates whether the subscription is recurring
 * @param frequencyId integer const representation of the frequency
 * @param autoBill enum setting
 * @param promoCode Promotional code applied to the subscription
 * @param promoDiscount Discount percentage or amount applied to the subscription
 * @param isAmountDiscount Indicates whether the discount is a fixed amount
 * @param allowCancellation Indicates whether the subscription can be cancelled
 * @param perSeatEnabled Indicates whether the subscription pricing is per seat
 * @param currencyId Unique identifier for the currency used in the subscription
 * @param maxSeatsLimit Maximum number of seats allowed for the subscription
 * @param trialEnabled Indicates whether the subscription has a trial period
 * @param trialDuration Duration of the trial period in days
 * @param allowQueryOverrides Indicates whether query overrides are allowed for the subscription
 * @param allowPlanChanges Indicates whether plan changes are allowed for the subscription
 * @param refundPeriod Number of days within which refunds can be requested
 * @param webhookConfiguration Webhook configuration for the subscription
 * @param isDeleted Indicates whether the subscription has been deleted
 * @param archivedAt Timestamp
 * @param createdAt Timestamp
 * @param updatedAt Timestamp
 */


data class Subscription (

    /* Unique identifier for the subscription */
    @field:JsonProperty("id")
    val id: kotlin.String? = null,

    /* Unique identifier for the user associated with the subscription */
    @field:JsonProperty("user_id")
    val userId: kotlin.String? = null,

    /* Unique identifier for the product associated with the subscription */
    @field:JsonProperty("product_id")
    val productId: kotlin.String? = null,

    /* Unique identifier for the company associated with the subscription */
    @field:JsonProperty("company_id")
    val companyId: kotlin.String? = null,

    /* Unique identifier for the recurring invoice associated with the subscription */
    @field:JsonProperty("recurring_invoice_id")
    val recurringInvoiceId: kotlin.String? = null,

    /* Indicates whether the subscription is recurring */
    @field:JsonProperty("is_recurring")
    val isRecurring: kotlin.Boolean? = null,

    /* integer const representation of the frequency */
    @field:JsonProperty("frequency_id")
    val frequencyId: kotlin.String? = null,

    /* enum setting */
    @field:JsonProperty("auto_bill")
    val autoBill: kotlin.String? = null,

    /* Promotional code applied to the subscription */
    @field:JsonProperty("promo_code")
    val promoCode: kotlin.String? = null,

    /* Discount percentage or amount applied to the subscription */
    @field:JsonProperty("promo_discount")
    val promoDiscount: java.math.BigDecimal? = null,

    /* Indicates whether the discount is a fixed amount */
    @field:JsonProperty("is_amount_discount")
    val isAmountDiscount: kotlin.Boolean? = null,

    /* Indicates whether the subscription can be cancelled */
    @field:JsonProperty("allow_cancellation")
    val allowCancellation: kotlin.Boolean? = null,

    /* Indicates whether the subscription pricing is per seat */
    @field:JsonProperty("per_seat_enabled")
    val perSeatEnabled: kotlin.Boolean? = null,

    /* Unique identifier for the currency used in the subscription */
    @field:JsonProperty("currency_id")
    val currencyId: kotlin.String? = null,

    /* Maximum number of seats allowed for the subscription */
    @field:JsonProperty("max_seats_limit")
    val maxSeatsLimit: kotlin.Int? = null,

    /* Indicates whether the subscription has a trial period */
    @field:JsonProperty("trial_enabled")
    val trialEnabled: kotlin.Boolean? = null,

    /* Duration of the trial period in days */
    @field:JsonProperty("trial_duration")
    val trialDuration: kotlin.Int? = null,

    /* Indicates whether query overrides are allowed for the subscription */
    @field:JsonProperty("allow_query_overrides")
    val allowQueryOverrides: kotlin.Boolean? = null,

    /* Indicates whether plan changes are allowed for the subscription */
    @field:JsonProperty("allow_plan_changes")
    val allowPlanChanges: kotlin.Boolean? = null,

    /* Number of days within which refunds can be requested */
    @field:JsonProperty("refund_period")
    val refundPeriod: kotlin.Int? = null,

    /* Webhook configuration for the subscription */
    @field:JsonProperty("webhook_configuration")
    val webhookConfiguration: kotlin.String? = null,

    /* Indicates whether the subscription has been deleted */
    @field:JsonProperty("is_deleted")
    val isDeleted: kotlin.Boolean? = null,

    /* Timestamp */
    @field:JsonProperty("archived_at")
    val archivedAt: java.math.BigDecimal? = null,

    /* Timestamp */
    @field:JsonProperty("created_at")
    val createdAt: java.math.BigDecimal? = null,

    /* Timestamp */
    @field:JsonProperty("updated_at")
    val updatedAt: java.math.BigDecimal? = null

)

